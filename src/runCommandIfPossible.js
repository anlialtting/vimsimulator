function runCommandIfPossible(){
    if(this.mode==1)
        return runCommandIfPossibleForMode1(this)
    if(this.mode==2)
        return this.runCommandIfPossibleForMode2()
    let
        cmd=this.command,
        argument
    if(48<=cmd.charCodeAt(0)&&cmd.charCodeAt(0)<58){
        let i=0
        argument=0
        while(48<=cmd.charCodeAt(i)&&cmd.charCodeAt(i)<58){
            argument=10*argument+(cmd.charCodeAt(i)-48)
            i++
        }
        cmd=cmd.substring(i,cmd.length)
    }
    {
        let result=tryCommand(this)
        if(result.matched){
            if(result.changed)
                this.lastChangingCommand=
                    this.command
            this.command=''
        }
    }
    if(this.command[0]===':'){
        for(let i=1;i<this.command.length;i++){
            if(this.command[i]==='q')
                this.activated=false
            if(this.command[i]==='w'){
                this.write()
            }
        }
        this.command=''
    }
    if(this.command[0]==='/'){
        this.searchPattern=this.command.substring(1)
        this.gotoNextMatch()
        this.command=''
    }
    function tryCommand(vim){
        var result={}
        if(cmd==='A'){
            vim.command_A(argument)
            result.matched=true
        }
        if(cmd==='D'){
            vim.command_D(argument)
            result.matched=true
        }
        if(cmd==='G'){
            vim.command_G(argument)
            result.matched=true
        }
        if(cmd==='I'){
            vim.command_I(argument)
            result.matched=true
        }
        if(cmd==='O'){
            vim.command_O(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd==='P'){
            vim.command_P(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd==='X'){
            vim.command_X(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd==='a'){
            let i=vim.selectionStart
            if(i+1<vim.text.length)
                i++
            vim.selectionStart=
                vim.selectionEnd=i
            vim.mode=1
            result.matched=true
        }
        if(cmd==='h'){
            vim.command_h(argument)
            result.matched=true
        }
        if(cmd==='i'){
            vim.mode=1
            vim.selectionEnd=vim.selectionStart
            result.matched=true
        }
        if(cmd==='j'){
            vim.command_j(argument)
            result.matched=true
        }
        if(cmd==='k'){
            vim.command_k(argument)
            result.matched=true
        }
        if(cmd==='l'){
            vim.command_l(argument)
            result.matched=true
        }
        if(cmd==='n'){
            vim.gotoNextMatch()
            result.matched=true
        }
        if(cmd==='o'){
            vim.command_o(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd==='p'){
            vim.command_p(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd[0]==='r'&&cmd.length===2){
            vim.command_r(argument,cmd[1])
            result.matched=true
            result.changed=true
        }
        if(cmd==='u'){
            vim.command_u(argument)
            result.matched=true
        }
        if(cmd==='v'){
            vim.mode=2
            vim.visualmode.fixedCursor=vim.selectionStart
            result.matched=true
        }
        if(cmd==='x'){
            vim.command_x(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd==='dd'){
            vim.command_dd(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd==='gg'){
            vim.command_gg(argument)
            result.matched=true
        }
        if(cmd==='yy'){
            vim.command_yy(argument)
            result.matched=true
        }
        if(cmd==='<<'){
            vim.command_ltlt(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd==='>>'){
            vim.command_gtgt(argument)
            result.matched=true
            result.changed=true
        }
        if(cmd==='.'){
            if(vim.lastChangingCommand){
                vim.command=vim.lastChangingCommand
                vim.runCommandIfPossible()
            }
            result.matched=true
        }
        return result
    }
}
function runCommandIfPossibleForMode1(vim){
    if(vim.command=='')
        return
    if(vim.command==String.fromCharCode(27)){
        vim.mode=0
        vim.command=''
        return
    }
    vim.text=vim.text.substring(0,vim._cursor.abs)+vim.command+vim.text.substring(vim._cursor.abs)
    vim.command=''
}
function runCommandIfPossibleForMode2(){
    if(this.command==='d'){
        this.command_vd()
        this.command=''
    }else if(this.command==='y'){
        this.command_vy()
        this.command=''
    }else if(this.command==='<'){
        this.command_vlt()
        this.command=''
    }else if(this.command==='>'){
        this.command_vgt()
        this.command=''
    }
}
;({
    runCommandIfPossible,
    runCommandIfPossibleForMode2,
})
